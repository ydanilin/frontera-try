
conda create --name front python=3.6.7
Go to ./ebanina/kitaezz/dist subdirectory. Install the wheel via
pip install cityhash-0.2.0-cp36-cp36m-win32.whl
pip install frontera[sql,strategies,logging]

conda install -c conda-forge scrapy

conda remove --name front --all

1. Do not include start_urls in spiders!

2. Add db file setting:
SQLALCHEMYBACKEND_ENGINE = 'sqlite:///<<fileName>>.db'

3. Feed initial links through database file generation
using add_seeds script (step 6 here : https://frontera.readthedocs.io/en/latest/topics/quick-start-single.html?highlight=add%20seeds):
python -m frontera.utils.add_seeds --config tutorial.frontera.settings --seeds-file seeds.txt


Stop frontera spider: ^\ (sigquit)

Printing something to file:
print(, file=open("/home/yury/dev/pitonizm/tutorial/huj.txt", "w"))
print('\n'.join(map(lambda x: x.url, list_)), file=open("/home/yury/dev/pitonizm/tutorial/huj.txt", "w"))
print(logging_tree.format.build_description(), file=open("/home/yury/dev/pitonizm/tutorial/huj.txt", "w"))


urlparse: <scheme>://<netloc>/<path>;<params>?<query>#<fragment>
To limit Frontera requests from DB, use MAX_REQUESTS


https://valentina-db.com/en/get-free-valentina-studio


Rerer as Visual Studio Build Tools in appwiz
https://visualstudio.microsoft.com/ru/visual-cpp-build-tools/
go to all downloadable files -> Build Tools для Visual Studio 2017 (2017 = version 15)


Rerer as Microsoft Build Tools 2015 in appwiz
https://www.microsoft.com/en-US/download/details.aspx?id=48159

C:\ProgramData\Package Cache\{A7E88B38-6886-4474-9D85-A8ABE5FCD80E}v14.0.23107\packages\BuildTools_MSBuildResMsi_x86\
ORCA msi

reestr:
HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\

Cache:
"C:\ProgramData\Package Cache\{A7E88B38-6886-4474-9D85-A8ABE5FCD80E}v14.0.23107"
"C:\ProgramData\Package Cache\{D1437F51-786A-4F57-A99C-F8E94FBA1BD8}v14.0.23107"
"C:\ProgramData\Package Cache\{4B7958F6-4943-4903-B379-9180DC8C2105}v14.0.23107"
"C:\ProgramData\Package Cache\{8C918E5B-E238-401F-9F6E-4FB84B024CA2}v14.0.23107"
"C:\ProgramData\Package Cache\{d21da0dd-4ba4-4838-ba58-64cf7a77131a}"

https://github.com/escherba/python-cityhash
https://github.com/CharlesShang/FastMaskRCNN/issues/173

conda install -c scrapinghub frontera - does not work, downgrades to python 2.7

vs_buildtools__1207471025.1547837321.exe --layout c:\ebanina --add Microsoft.VisualStudio.Component.Static.Analysis.Tools --add Microsoft.VisualStudio.Component.VC.CoreBuildTools --add Microsoft.VisualStudio.Component.VC.Redist.14.Latest --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows10SDK --add Microsoft.VisualStudio.Component.VC.CMake.Project --add Microsoft.VisualStudio.Component.Windows10SDK.17134 --add Microsoft.VisualStudio.Component.VC.140 --add Microsoft.VisualStudio.Component.VC.CLI.Support --lang en-US


vs_buildtools__1207471025.1547837321.exe --add Microsoft.VisualStudio.Component.Static.Analysis.Tools --add Microsoft.VisualStudio.Component.VC.CoreBuildTools --add Microsoft.VisualStudio.Component.VC.Redist.14.Latest --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows10SDK --add Microsoft.VisualStudio.Component.VC.CMake.Project --add Microsoft.VisualStudio.Component.Windows10SDK.17134 --add Microsoft.VisualStudio.Component.VC.140 --add Microsoft.VisualStudio.Component.VC.CLI.Support

VSCODE: select all occuriences: Ctrl+Shift+L

https://github.com/xcoco/python-cityhash-windows


diff ./kitaezz/city.cc ./marshalov/src/city.cc

city.cc - line 31, 106 (take from kitaezz)
citycrc.h - NO DIFFS
city.h - NO DIFFS
cityhash.cpp - NO DIFFS
cityhash.pyx - NO DIFFS
config.h - NO DIFFS
setup.py - fix imports for py3


%comspec% /k "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars32.bat"


frontera\contrib\scrapy\schedulers\frontier.py(114)process_spider_output()
-> self.frontier.page_crawled(response)  # removed frontier part from .meta

frontera\utils\managers.py(33)page_crawled()
-> self.manager.page_crawled(self.response_converter.to_frontier(response))

frontera\core\manager.py(552)page_crawled()
-> super(LocalFrontierManager, self).page_crawled(response)

frontera\core\manager.py(268)page_crawled()
-> return_classes=self.response_model)

frontera\core\manager.py(128)_process_components()
-> return_classes=return_classes, **kwargs)

frontera\core\manager.py(140)_process_component()
-> return_obj = getattr(component, method_name)(*([obj] if obj else []), **kwargs)

frontera\strategy\basic.py(21)page_crawled()
-> def page_crawled(self, response):

list make commands:
make(space)(tab)(tab)

Шаббатнiй пост добра.
Пиздец, больше всего на свете меня бесят в Питоне две вещи: импорты и его распрекраснейший логгер.
Импорт это вообще песня отдельная, а сейчас пост про логгер.
80% постов вначале поют хвалебные песни о том, что логгировать - это очень важно (а то мы, бля, не знаем), какой он прекрасный и мощный, а дальше модифицированный копипаст из доковского туториала. Но!
Были ли у тебя ситуации, когда ты делаешь стандартное getLogger(__name__), затем log.info('message') - а в ответ - ни хера?
Были ли у тебя ситуации, когда вроде все настроил, а эта сука начинает плевать твое сообщение ДВА раза?
Так вот, ни одна сука из тех 80% постов нифига не дает ясность почему это происходит.
Ситуация усугубляется, когда у тебя сторонний фреймворк, а в нем вшиты свои логгеры с мутной документацией. Как быть в этом пиздеце?
Сегодня открыл для себя прекрасное: вот эту либу: pip install logging_tree
и вот эту статейку: https://rhodesmill.org/brandon/2012/logging_tree/
Показывает ПОЛНОЕ дерево логгеров с их уровнями и хандлерами, делается propagate или нет.
Это нирвана!


http://pandoc.org/
http://www.software-architects.com/devblog/2017/05/23/Markdown-pandoc-conceptual-documents
http://www.flutterbys.com.au/stats/tut/tut17.3.html
http://www.nrstickley.com/pandoc-markdown/
http://www.nrstickley.com/somelight/

rsvg-convert will be needed for pdfs

pandoc webpilot.md -t html5 -s --css devstyle.css -o webpilot.html

https://www.flaticon.com/free-icon/database_149206
https://bip.weizmann.ac.il/course/python/PyMOTW/PyMOTW/docs/contents.html

